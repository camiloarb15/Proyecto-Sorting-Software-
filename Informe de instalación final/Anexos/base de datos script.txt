-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema mydb
-- -----------------------------------------------------
DROP SCHEMA IF EXISTS `mydb` ;

-- -----------------------------------------------------
-- Schema mydb
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `mydb` DEFAULT CHARACTER SET utf8 ;
USE `mydb` ;

-- -----------------------------------------------------
-- Table `mydb`.`autor`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`autor` ;

CREATE TABLE IF NOT EXISTS `mydb`.`autor` (
  `cod_autor` INT NOT NULL COMMENT 'permite acceder a la tabla autor',
  `nombre_autor` TEXT(20) NOT NULL COMMENT 'este campo indica los nombres y apellidos completos del autor del libro',
  `fecha_nacimiento` INT NOT NULL COMMENT 'este campo indica el momento del nacimineto del autor',
  `descripcion` VARCHAR(45) NOT NULL COMMENT 'este campo indica con pocas palabras quen es el autor',
  PRIMARY KEY (`cod_autor`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`categoria`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`categoria` ;

CREATE TABLE IF NOT EXISTS `mydb`.`categoria` (
  `idcategoria` INT NOT NULL AUTO_INCREMENT COMMENT 'permite acceder a la tabla generos',
  `genero` TEXT(20) NOT NULL COMMENT 'este campo indica el genero bibligraficol libro',
  PRIMARY KEY (`idcategoria`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`libro`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`libro` ;

CREATE TABLE IF NOT EXISTS `mydb`.`libro` (
  `id_libro` VARCHAR(30) NOT NULL COMMENT 'permite acceder al registro del libro',
  `titulo_libro` TEXT(20) NOT NULL COMMENT 'este campo indica el nombre del libro',
  `fecha_publicacion` DATE NOT NULL COMMENT 'este campo indica el momento en el que se lanzo el libro',
  `descripcion` TEXT(50) NOT NULL COMMENT 'este campo indica una descripcion corta de la historia del libro',
  `autor_cod_autor` INT NOT NULL COMMENT 'este campo indica ',
  `categoria_idcategoria` INT NOT NULL,
  `estado_libro` TINYINT NOT NULL COMMENT 'estado_libro: 1: disponible - 2: no disponible-3:de_baja - 4: reparacion',
  PRIMARY KEY (`id_libro`),
  INDEX `fk_libro_autor1_idx` (`autor_cod_autor` ASC) VISIBLE,
  INDEX `fk_libro_categoria1_idx` (`categoria_idcategoria` ASC) VISIBLE,
  CONSTRAINT `fk_libro_autor1`
    FOREIGN KEY (`autor_cod_autor`)
    REFERENCES `mydb`.`autor` (`cod_autor`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_libro_categoria1`
    FOREIGN KEY (`categoria_idcategoria`)
    REFERENCES `mydb`.`categoria` (`idcategoria`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`tipo_doc`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`tipo_doc` ;

CREATE TABLE IF NOT EXISTS `mydb`.`tipo_doc` (
  `tipo_docu` VARCHAR(5) NOT NULL,
  `desc_tdoc` VARCHAR(25) NOT NULL COMMENT 'este campo indica con letras y numero de forma abreviada el documento',
  `estado_tdoc` TINYINT NOT NULL COMMENT 'estado_tdoc 1: activo- 2: inactivo',
  PRIMARY KEY (`tipo_docu`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`persona`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`persona` ;

CREATE TABLE IF NOT EXISTS `mydb`.`persona` (
  `tipo_doc_tipo_docu` VARCHAR(5) NOT NULL,
  `idpersona` VARCHAR(15) NOT NULL,
  `nom_per` VARCHAR(45) NOT NULL,
  `aple_per` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`tipo_doc_tipo_docu`, `idpersona`),
  INDEX `fk_persona_tipo_doc1_idx` (`tipo_doc_tipo_docu` ASC) VISIBLE,
  CONSTRAINT `fk_persona_tipo_doc1`
    FOREIGN KEY (`tipo_doc_tipo_docu`)
    REFERENCES `mydb`.`tipo_doc` (`tipo_docu`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`proveedor`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`proveedor` ;

CREATE TABLE IF NOT EXISTS `mydb`.`proveedor` (
  `persona_tipo_doc_tipo_docu` VARCHAR(5) NOT NULL,
  `persona_idpersona` VARCHAR(15) NOT NULL,
  PRIMARY KEY (`persona_tipo_doc_tipo_docu`, `persona_idpersona`),
  CONSTRAINT `fk_proveedor_persona1`
    FOREIGN KEY (`persona_tipo_doc_tipo_docu` , `persona_idpersona`)
    REFERENCES `mydb`.`persona` (`tipo_doc_tipo_docu` , `idpersona`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`admin`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`admin` ;

CREATE TABLE IF NOT EXISTS `mydb`.`admin` (
  `persona_tipo_doc_tipo_docu` VARCHAR(5) NOT NULL,
  `persona_idpersona` VARCHAR(15) NOT NULL,
  `pasword` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`persona_tipo_doc_tipo_docu`, `persona_idpersona`),
  CONSTRAINT `fk_admin_persona1`
    FOREIGN KEY (`persona_tipo_doc_tipo_docu` , `persona_idpersona`)
    REFERENCES `mydb`.`persona` (`tipo_doc_tipo_docu` , `idpersona`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`movimiento`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`movimiento` ;

CREATE TABLE IF NOT EXISTS `mydb`.`movimiento` (
  `id_movimiento` INT NOT NULL AUTO_INCREMENT,
  `fecha_movimeinto` DATETIME NOT NULL,
  PRIMARY KEY (`id_movimiento`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`entrada`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`entrada` ;

CREATE TABLE IF NOT EXISTS `mydb`.`entrada` (
  `proveedor_persona_tipo_doc_tipo_docu` VARCHAR(5) NOT NULL,
  `proveedor_persona_idpersona` VARCHAR(15) NOT NULL,
  `admin_persona_tipo_doc_tipo_docu` VARCHAR(5) NOT NULL,
  `admin_persona_idpersona` VARCHAR(15) NOT NULL,
  `entrada_id` INT NOT NULL,
  INDEX `fk_entrada_proveedor1_idx` (`proveedor_persona_tipo_doc_tipo_docu` ASC, `proveedor_persona_idpersona` ASC) VISIBLE,
  INDEX `fk_entrada_admin1_idx` (`admin_persona_tipo_doc_tipo_docu` ASC, `admin_persona_idpersona` ASC) VISIBLE,
  PRIMARY KEY (`entrada_id`),
  INDEX `fk_entrada_movimiento1_idx` (`entrada_id` ASC) VISIBLE,
  CONSTRAINT `fk_entrada_proveedor1`
    FOREIGN KEY (`proveedor_persona_tipo_doc_tipo_docu` , `proveedor_persona_idpersona`)
    REFERENCES `mydb`.`proveedor` (`persona_tipo_doc_tipo_docu` , `persona_idpersona`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_entrada_admin1`
    FOREIGN KEY (`admin_persona_tipo_doc_tipo_docu` , `admin_persona_idpersona`)
    REFERENCES `mydb`.`admin` (`persona_tipo_doc_tipo_docu` , `persona_idpersona`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_entrada_movimiento1`
    FOREIGN KEY (`entrada_id`)
    REFERENCES `mydb`.`movimiento` (`id_movimiento`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`salida`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`salida` ;

CREATE TABLE IF NOT EXISTS `mydb`.`salida` (
  `salida_id` INT NOT NULL,
  `admin_persona_tipo_doc_tipo_docu` VARCHAR(5) NOT NULL,
  `admin_persona_idpersona` VARCHAR(15) NOT NULL,
  PRIMARY KEY (`salida_id`),
  INDEX `fk_salida_admin1_idx` (`admin_persona_tipo_doc_tipo_docu` ASC, `admin_persona_idpersona` ASC) VISIBLE,
  CONSTRAINT `fk_salida_movimiento1`
    FOREIGN KEY (`salida_id`)
    REFERENCES `mydb`.`movimiento` (`id_movimiento`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_salida_admin1`
    FOREIGN KEY (`admin_persona_tipo_doc_tipo_docu` , `admin_persona_idpersona`)
    REFERENCES `mydb`.`admin` (`persona_tipo_doc_tipo_docu` , `persona_idpersona`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`libro_has_movimiento`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`libro_has_movimiento` ;

CREATE TABLE IF NOT EXISTS `mydb`.`libro_has_movimiento` (
  `libro_id_libro` VARCHAR(30) NOT NULL,
  `movimiento_id_movimiento` INT NOT NULL,
  PRIMARY KEY (`libro_id_libro`, `movimiento_id_movimiento`),
  INDEX `fk_libro_has_movimiento_movimiento1_idx` (`movimiento_id_movimiento` ASC) VISIBLE,
  INDEX `fk_libro_has_movimiento_libro1_idx` (`libro_id_libro` ASC) VISIBLE,
  CONSTRAINT `fk_libro_has_movimiento_libro1`
    FOREIGN KEY (`libro_id_libro`)
    REFERENCES `mydb`.`libro` (`id_libro`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_libro_has_movimiento_movimiento1`
    FOREIGN KEY (`movimiento_id_movimiento`)
    REFERENCES `mydb`.`movimiento` (`id_movimiento`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`restablecer_contrase単a`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`restablecer_contrase単a` ;

CREATE TABLE IF NOT EXISTS `mydb`.`restablecer_contrase単a` (
  `idrestablecer_contrase単a` INT ZEROFILL NOT NULL,
  `codigo` VARCHAR(10) NOT NULL COMMENT 'este campo indica cual es la serie de numeros y letras de validacion de respaldo de contrase単a.',
  `correo` VARCHAR(25) NOT NULL COMMENT 'este campo indica  la direccion de correo de respaldo mediante la cual se enviara el codigo de validacion',
  `persona_tipo_doc_tipo_docu` VARCHAR(5) NOT NULL,
  `persona_idpersona` VARCHAR(15) NOT NULL,
  PRIMARY KEY (`idrestablecer_contrase単a`),
  UNIQUE INDEX `correo_UNIQUE` (`correo` ASC) VISIBLE,
  INDEX `fk_restablecer_contrase単a_persona1_idx` (`persona_tipo_doc_tipo_docu` ASC, `persona_idpersona` ASC) VISIBLE,
  CONSTRAINT `fk_restablecer_contrase単a_persona1`
    FOREIGN KEY (`persona_tipo_doc_tipo_docu` , `persona_idpersona`)
    REFERENCES `mydb`.`persona` (`tipo_doc_tipo_docu` , `idpersona`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
